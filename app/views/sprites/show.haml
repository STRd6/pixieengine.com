%style
  :sass
    button.add
      margin-bottom: 0.7em

    strong
      font-weight: bold

    em
      font-style: italic

    .comments_area
      width: 450px

      h3
        margin: 0

      #comment_preview
        background-color: white
        font-weight: normal
        margin: 15px 0
        padding: 0 5px

      label
        margin-top: 0

      textarea
        height: 75px

    .sprite_block
      display: inline-block
      margin-right: 5em
      vertical-align: top

    #tag
      width: 200px

- @title = sprite.display_name
- @meta_desc = sprite.meta_desc
- @has_reg_popup = true

.sprite_block
  %h1= sprite.display_name

  = render :partial => sprite, :locals => {link_path: load_sprite_path(sprite)}

  = markdown sprite.description

  .clear
  %p= author_link(sprite)


- if sprite.parent
  .sprite_block
    %h2
      Remixed from
      = sprite.parent.display_name

    = render :partial => sprite.parent

    = markdown sprite.parent.description

    .clear
    %p= author_link(sprite.parent)

- if sprite.children.any?
  %h2
    Remixes

  = render :partial => sprite.children.limit(20)


%actions><
  - if current_user
    %a.button(href="javascript:void(0)" rel="setAvatar")><
      Set as Avatar

    - if current_user.favorite?(sprite)
      %a.button(href="javascript:void(0)" rel="removeFavorite")><
        Remove Favorite

    - else
      %a.button.btn(href="javascript:void(0)" rel="addFavorite")><
        Add Favorite

  - if owner_or_admin?
    %a.button(href="#{load_sprite_path(sprite)}")><
      Load in Editor
    %a.button(href="#{edit_sprite_path(sprite)}")><
      Edit Details
    %a.button.btn(href="#{sprite_path(sprite)}" data-method="delete")><
      Delete

%h3 Tags
.tags
  - sprite.tag_list.each do |tag|
    = sprite_tag_link(sprite, tag)

  - sprite.source_list.each do |source|
    = sprite_tag_link(sprite, source)

  - sprite.dimension_list.each do |dimension|
    = sprite_tag_link(sprite, dimension)

  = form_tag add_tag_sprite_path, {"data-sprite_id" => sprite.id, "class" => "form-inline"} do
    = text_field_tag :tag, nil, :placeholder => "Tag name"
    %button.btn.add(type='submit') Add

= display_comments sprite

- content_for :javascript do
  - set_avatar_url = set_avatar_user_path(current_user) if current_user

  :coffeescript
    $ ->
      spriteId = null

      $("a[rel=setAvatar]").on "click", (event) ->
        event.preventDefault()

        if setAvatarUrl = #{set_avatar_url.to_json}
          notify "Saving..."
          spriteId = #{sprite.id}
          $.post setAvatarUrl, sprite_id: spriteId, (data) ->
            notify "Avatar successfully changed."

      $("a[rel=addFavorite]").on "click", (event) ->
        event.preventDefault()

        if url = #{add_favorite_sprite_path(sprite).to_json}
          notify "Adding favorite..."
          spriteId = #{sprite.id}
          $.post url, (data) ->
            notify "Added to favorites."

      $("a[rel=removeFavorite]").on "click", (event) ->
        event.preventDefault()

        if url = #{remove_favorite_sprite_path(sprite).to_json}
          notify "Removing..."
          spriteId = #{sprite.id}
          $.post url, (data) ->
            notify "Removed from favorites."
